<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPlayerDeath</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[0] = 60; // Play sound after a brief pause.
image_speed = 0; // Freeze on frame 1 at start. Like a "shocked" 
                 //   frame after Samus realizes she is going to die.
startflicker = 0; // When 1, start flickering white effect on top.
flickeralpha = 0;
flicker = 0;
flickerdelay = 3;
shockwavespawned = 1;
deatheffectarea = 30; // Rough radius of where to spawn death effects.
// Insert future suit sprite selection here.
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_index += 1; // Go to next frame.
image_speed = 0.25;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sound_play(sndPlayerDeath); // Wind-up to suit bursting.
startflicker = 1; // Initialize flicker effect on suit.
image_speed = 0.125; // Slowly curl.

/*

if (instance_exists(oPlayer))
{
    if (point_distance(x+sprite_width/2,y+sprite_height/2,oPlayer.x,oPlayer.y) &lt; 16) then
      { alarm[0] = 1; exit; }
}
if (sprite_index = sprBlockBreak16) sprite_index = sprBlockReform16;
if (sprite_index = sprBlockBreak8) sprite_index = sprBlockReform8;
image_speed = .25;
visible = true;
//sound_play(Reform1,Reform2,Reform3,Reform4,Reform5,Reform6));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (startflicker) and (flicker &lt; flickerdelay) flicker += 1;
if (flicker = flickerdelay)
{
    instance_create(x-deatheffectarea+random(deatheffectarea*2),y-deatheffectarea+random(deatheffectarea*2),oDeathAnimEffect);
    if (flickeralpha &lt; 1) flickeralpha += 0.03;
    flicker = 0;
}

if (image_index = 5)
    { image_speed = 0; alarm[1] = 75; }

if (image_index = 11) and (!shockwavespawned)
{
    with (instance_create(x,y,oDestroyAnim))
    {
        sprite_index = sprShockwave;
        image_xscale = 0.2;
        image_yscale = image_xscale;
        image_alpha = 0.5;
    }
    shockwavespawned = 1;
}


    
/*

switch (sprite_index)
{
    case sprMissileSmoke:
        image_xscale += .01;
        image_yscale += .01;
        if (image_alpha &gt; 0) image_alpha -= 0.015;
        break;
    case sprShockwave:
        image_xscale += 0.1;
        image_yscale = image_xscale;
        if (image_alpha &gt; 0) image_alpha -= 0.05;
        else instance_destroy();
        break;
    case sprBlockBreak16:
    case sprBlockBreak8:
        image_angle = 0;
        break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
if (flicker = flickerdelay-1) draw_sprite_ext(sprPlayerDeathFlicker,image_index,x,y,1,1,image_angle,c_white,flickeralpha);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
